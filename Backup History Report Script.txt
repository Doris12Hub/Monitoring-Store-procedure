USE [DBA]
GO

/****** Object:  StoredProcedure [dbo].[lsp_db_backup_history_rpt]    Script Date: 12/2/2024 12:57:58 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[lsp_db_backup_history_rpt]
AS
SET NOCOUNT ON

DECLARE @dbname     VARCHAR(30) = DB_NAME(),
        @diff       INT = 0,
        @svrname    NVARCHAR(255),
        @tablehtml  NVARCHAR(MAX),
        @subject1   NVARCHAR(50),
        @oldestdate DATETIME = (GETDATE() - 365);

TRUNCATE TABLE [DBA].[dbo].[DB_Backup_History]

EXEC msdb..sp_delete_backuphistory  @oldest_date = @oldestdate;  

IF EXISTS (SELECT 0 from sysobjects where name = '@Temp_Backup_Size')
 BEGIN
  DROP TABLE [@Temp_Backup_Size]
 END

IF EXISTS (SELECT 0 from DBA.dbo.sysobjects where name = 'Backup_History_rpt')
 BEGIN
  DROP TABLE [Backup_History_rpt]
 END

CREATE TABLE [@Temp_Backup_Size]
             ([Row]           INT IDENTITY,
              [Database_Name] VARCHAR(256),
              [Backup_Date]   DATETIME,
              [Backup_Size]   BIGINT
             );

CREATE TABLE [Backup_History_rpt]
             ([Database_Name]  VARCHAR(256) NULL,
              [Start Date]     VARCHAR(12) NULL,
              [End Date]       VARCHAR(12) NULL,
              [Start Size(MB)] VARCHAR(12) NULL,
              [End Size(MB)]   VARCHAR(12) NULL,
              [Difference(MB)] VARCHAR(12) NULL,
              [Pct Change]     VARCHAR(12) NULL
             );

INSERT INTO [DBA].[dbo].[DB_Backup_History]
SELECT [a].[backup_set_id] AS                            'Backup_Set_ID',
       [a].[media_set_id] AS                             'Media_Set_ID',
       [a].[database_name] AS                            'Database_Name',
       [a].[backup_finish_date] AS                       'Backup_Finish_Date',
       SUM([a].[compressed_backup_size]) AS              'Compressed_Backup_Size_Raw',
       SUM([a].[compressed_backup_size]) / 1073741824 AS 'Compressed_Backup_Size_GB',
       SUM([a].[backup_size]) AS                         'Backup_Size_Raw',
       SUM([a].[backup_size]) / 1073741824 AS            'Backup_Size_GB'
  FROM      [msdb].[dbo].[backupset]        AS [a]
       JOIN [msdb].[dbo].[backupfile]       AS [b] ON [a].[backup_set_id] = [b].[backup_set_id]
  WHERE [a].[type] = 'D'
    AND [a].[backup_finish_date] >= (GETDATE()-365)
  GROUP BY [a].[backup_set_id],
           [a].[media_set_id],
           [a].[database_name],
           [a].[backup_finish_date]

INSERT INTO [@Temp_Backup_Size]
([Database_Name],
 [Backup_Date],
 [Backup_Size]
)
SELECT DISTINCT
       [Database_Name] AS      'Database_Name',
       [Backup_Finish_Date] AS 'Backup_Date',
       [Backup_Size_Raw] AS    'Backup_Size'
  FROM [DBA].[dbo].[DB_Backup_History] WITH (NOLOCK)
  WHERE DATEPART([DW], [Backup_Finish_Date]) = 1
  ORDER BY [Database_Name],
           [Backup_Finish_Date];

INSERT INTO [Backup_History_rpt]
SELECT [y1].[Database_Name],
       LEFT(CONVERT( VARCHAR, [y1].[Backup_Date], 101), 12) AS                                                                                'Start Date',
       LEFT(CONVERT( VARCHAR, [y2].[Backup_Date], 101), 12) AS                                                                                'End Date',
       LEFT(CONVERT( VARCHAR, PARSENAME(CONVERT(VARCHAR, CONVERT(MONEY, [y1].[Backup_Size] / 1000000), 1), 2)), 12) AS                        'Start Size(MB)',
       LEFT(CONVERT( VARCHAR, PARSENAME(CONVERT(VARCHAR, CONVERT(MONEY, [y2].[Backup_Size] / 1000000), 1), 2)), 12) AS                        'End Size(MB)',
       LEFT(CONVERT( VARCHAR, PARSENAME(CONVERT(VARCHAR, CONVERT(MONEY, ([y2].[Backup_Size] - [y1].[Backup_Size]) / 1000000), 1), 2)), 12) AS 'Difference(MB)',
       LEFT(CONVERT( VARCHAR, 100 * ([y2].[Backup_Size] - [y1].[Backup_Size]) / [y1].[Backup_Size])+'%', 12) AS                               'Pct Change'

  FROM [@Temp_Backup_Size] AS [Y1]
       INNER JOIN [@Temp_Backup_Size] AS [Y2] ON [Y2].[row] = [Y1].[row] + 1

  WHERE DATEPART([DW], [y1].[Backup_Date]) = 1
        AND CONVERT(DATE, [y2].[Backup_Date]) > CONVERT(DATE, [y1].[Backup_Date])
        AND [y1].[Database_Name] NOT IN('DBA', 'Master', 'model', 'msdb')
	   AND [y1].[Backup_Date] >= (GETDATE()-365)

  ORDER BY [y1].[Database_Name],
           CONVERT( DATE, [y2].[Backup_Date]),
           CONVERT( DATE, [y1].[Backup_Date]) DESC;

--SELECT [Database_Name], [End Date],[End Size(mb)] from  [@Temp_Backup_Size2]
--RETURN(0)


select * from Backup_History_rpt order by 1, [end date]
GO


