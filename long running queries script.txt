USE [DBA]
GO

/****** Object:  StoredProcedure [dbo].[lsp_long_running_queries]    Script Date: 12/1/2024 8:38:42 PM ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO




CREATE PROCEDURE [dbo].[lsp_long_running_queries]
AS
     SET NOCOUNT ON;

     DECLARE @servername VARCHAR(256);
     DECLARE @xml NVARCHAR(MAX);
     DECLARE @body NVARCHAR(MAX);
     DECLARE @longrunningthreshold INT;
     DECLARE @subject VARCHAR(256);
     DECLARE @mydate DATETIME;
     DECLARE @recipients VARCHAR(MAX);

     SET @mydate = GETDATE();
     SET @servername =
(
    SELECT UPPER(@@servername)
);
     SET @subject = 'ALERT: Long Running Queries on '+@servername+'. '+CONVERT(VARCHAR(10), @mydate, 101)+RIGHT(CONVERT(VARCHAR(32), @mydate, 100), 8);
     SET @recipients = 'SQLAdmin@phl.org';

-- SPECIFY LONG RUNNING QUERY DURATION THRESHOLD
     SET @longrunningthreshold = 10;

-- STEP 1: COLLECT LONG RUNNING QUERY DETAILS.
     WITH cte
          AS (
          SELECT    [SPID] = [spid],
                    [Start_Time] =
(
    SELECT [start_time]
    FROM    [sys].[dm_exec_requests]
    WHERE  [spid] = [session_id]
),
                    [Status] = LTRIM(RTRIM([status])),
                    [Duration] = DATEDIFF([mi],
(
    SELECT [start_time]
    FROM   [sys].[dm_exec_requests]
    WHERE  [spid] = [session_id]
), GETDATE()),
                    [LogIName],
                    [HostName],
                    [DB] =
(
    SELECT [sdb].[name]
    FROM   [MASTER]..[sysdatabases] [sdb]
    WHERE  [sdb].[dbid] = [qs].[dbid]
),
                    [Query] = SUBSTRING([st].[text], ([qs].[stmt_start]/2)+1, ((CASE [qs].[stmt_end]
                                                                                    WHEN-1
                                                                                    THEN DATALENGTH([st].text)
                                                                                    ELSE [qs].[stmt_end]
                                                                                END-[qs].[stmt_start])/2)+1),
                    text
          FROM [sys].[sysprocesses] [qs]
               CROSS APPLY [sys].[Dm_exec_sql_text]([sql_handle]) [st]
          WHERE [qs].[dbid] > 4
                AND ([CMD] NOT LIKE '%BACKUP%'
                AND [CMD] NOT LIKE '%UPDATE STATISTICS%')
                AND [LogIName] NOT LIKE '%mazeika%')

-- STEP 2: GENERATE HTML TABLE 
          SELECT    @xml = CAST(
(
    SELECT [SPID] AS 'td',
           '',
           [Start_Time] AS 'td',
           '',
           [Duration] AS 'td',
           '',
           [Status] AS 'td',
           '',
           [LogIName] AS 'td',
           '',
           [HostName] AS 'td',
           '',
           [DB] AS 'td',
           '',
           [Query] AS 'td',
           '',
           [Text] AS 'td'
    FROM    [cte]
    WHERE  [Duration] > = @longrunningthreshold FOR XML PATH('tr'), ELEMENTS
) AS NVARCHAR(MAX));

-- step 3: do rest of html formatting
     SET @body = '<html>
             <body>
             <H2>Long Running Queries ( Limit > 2 Minute(s) ) </H2>
             <table border = 1 BORDERCOLOR="Black"> 
			 <tr>
			 <th align="centre"> SPID </th>
			 <th> Start_Time </th> 
			 <th> Duration(Min) </th> 
			 <th> Status </th>
			 <th> LogIName </th>
			 <th> HostName </th>
			 <th> DB </th> 
			 <th> Query </th>
			  <th> Text </th>
			 </tr>';

     SET @body = @body+@xml+'</table></body></html>';

-- STEP 4: SEND EMAIL IF A LONG RUNNING QUERY IS FOUND.
     IF(@xml IS NOT NULL)
         BEGIN
             EXEC [msdb].[dbo].[Sp_send_dbmail]
                  @profile_name = 'SQLAdmin',
                  @body = @body,
                  @body_format = 'HTML',
                  @recipients = @recipients,
                  @subject = @subject;
         END;
     RETURN(0);
GO


